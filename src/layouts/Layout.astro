---
import "animate.css";

export interface Props {
  title: string;
}

const { title } = Astro.props;

const description =
  "Fellipe Pires is a creative, team player and adaptable front-end developer with focus on deliver great user experience.";
const websiteUrl = "https://www.fthomasvp.github.io";
const imageUrl = "https://fthomasvp.github.io/android-chrome-192x192.png";
const imageAlt = "Fellipe Pires initials white over a dark background";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="keywords" content="developer, frontend, react, software" />

    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={websiteUrl} />
    <meta property="og:image" content={imageUrl} />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:width" content="192" />
    <meta property="og:image:height" content="192" />
    <meta property="og:image:alt" content={imageAlt} />

    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta property="twitter:url" content={websiteUrl} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="fthomasvp.github.io" />
    <meta name="twitter:image" content={imageUrl} />
    <meta name="twitter:image:alt" content={imageAlt} />

    <meta name="
      generator" content={Astro.generator} />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <title>{title}</title>
  </head>
  <body style="overflow: auto;">
    <slot />
  </body>
</html>

<style lang="scss" is:global>
  @import "../styles/base.scss";

  *,
  *::before,
  *::after {
    box-sizing: border-box;

    scroll-behavior: smooth;

    margin: 0;
    padding: 0;

    word-wrap: break-word;
  }

  *:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px $colors-yellow-mikado;
  }

  body {
    color: $colors-black-rich;
    font-family: $fontfamily-poppins;
    font-size: $fontsizes-md;
    line-height: $lineheights-base;

    background-color: $colors-white;
  }

  section {
    /* `block` represents "top" and "bottom" */
    padding-block: $space-16;
  }

  h1 {
    font-size: $fontsizes-5xl;
    font-family: $fontfamily-bebas-neue;
  }
  h2 {
    margin-block: 0.8em;

    font-size: $fontsizes-4xl;
    font-family: $fontfamily-bebas-neue;
    letter-spacing: $letterspacings-wider;
  }
  h3 {
    margin-block: 0.4em;

    font-weight: $fontweights-medium;
    font-size: $fontsizes-3xl;
    font-family: $fontfamily-bebas-neue;
    letter-spacing: $letterspacings-widest;
  }
  h4,
  h5,
  h6 {
    font-family: $fontfamily-bebas-neue;
  }

  @media (min-width: $breakpoints-sm) {
    body {
      font-size: $fontsizes-lg;
    }
  }

  /* 
    Utility classes 
  */
  .d-flex {
    display: flex;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-column {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .justify-center {
    justify-content: center;
  }
  .items-center {
    align-items: center;
  }

  .text-center {
    text-align: center;
  }

  .wrapper {
    max-width: 70em;

    margin-inline: auto;
    /* `inline` represents "left" and "right" */
    padding-inline: $space-5;
  }

  /*
    Wave background effect
  */
  .wave-effect {
    position: relative;

    &::after {
      content: "";

      position: absolute;
      bottom: 0;
      z-index: $zIndices-hide;

      width: 100%;
      height: 180px;

      transform: rotateX(180deg);

      background: $colors-gold;
      mask-image: url("/images/wave-headline-01.svg");
      -webkit-mask-image: url("/images/wave-headline-01.svg");
    }
  }

  /*
    Diagonal background effect
  */
  .diagonal-effect {
    position: relative;
    isolation: auto;

    &::after {
      content: "";

      position: absolute;
      inset: 0;
      z-index: $zIndices-hide;

      background-color: $colors-gold;

      transform: skewY(-4deg);
    }
  }

  /*
    Highlight animation
  */
  .text-highlight {
    background: linear-gradient(
      to right,
      white,
      white 50%,
      $colors-gunmetal 50%
    );
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 100%;
    background-position: 100%;

    animation: 4s ease-in-out 1s infinite normal none running highlighting;
  }
  @keyframes highlighting {
    from {
      background-position: 100%;
    }
    50% {
      background-position: 0% 100%;
    }
    to {
      background-position: 0% 100%;
    }
  }
</style>
